name: Build Musium Packaged

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches: 
      - main
      - dev

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]
        platform: [x64, ARM64]

    runs-on: windows-latest

    env:
      Solution_Name: Musium

    steps:
    - name: Checkout
      uses: actions/checkout@v4
  
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 8.0.x
    
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
    - name: List files
      run: ls -R
    - name: Restore the application
      run: msbuild "$env:Solution_Name.sln" /t:Restore /p:Configuration=$env:Configuration
      env:
        Solution_Name: Musium
        Configuration: ${{ matrix.configuration }}

    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
        $certificatePath = "GitHubActionsWorkflow.pfx"
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
  
    - name: Create the app package
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration /p:Platform=$env:Platform /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:AppxPackageDir="$env:Appx_Package_Dir" /p:GenerateAppxPackageOnBuild=true
      env:
        Appx_Bundle: Never
        Appx_Package_Build_Mode: SideloadOnly
        Appx_Package_Dir: Packages\
        Configuration: ${{ matrix.configuration }}
        Platform: ${{ matrix.platform }}

    - name: Remove the pfx
      run: Remove-Item -path GitHubActionsWorkflow.pfx

    - name: Upload MSIX package
      uses: actions/upload-artifact@v4
      with:
        name: MSIX Package
        path: ${{ env.Solution_Name }}\\Packages
